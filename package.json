{
  "name": "periscope",
  "displayName": "Periscope",
  "description": "ripgrep workspace search with file peek",
  "keywords": [
    "rg",
    "ripgrep",
    "search",
    "telescope",
    "peek",
    "grep",
    "file search",
    "workspace search",
    "search in files",
    "search in folder",
    "search preview"
  ],
  "version": "1.10.3",
  "publisher": "JoshMu",
  "icon": "assets/icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/joshmu/periscope"
  },
  "engines": {
    "vscode": "^1.88.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "periscope.search",
        "title": "Periscope: Search"
      },
      {
        "command": "periscope.openInHorizontalSplit",
        "title": "Periscope: Open Result in Horizontal Split",
        "enablement": "periscopeActive"
      }
    ],
    "configuration": {
      "title": "Periscope",
      "properties": {
        "periscope.rgOptions": {
          "type": "array",
          "default": [
            "--smart-case",
            "--sortr path"
          ],
          "items": {
            "type": "string"
          },
          "description": "Additional options to pass to the 'rg' command, you can view all options in your terminal via 'rg --help'."
        },
        "periscope.rgPath": {
          "type": "string",
          "description": "Override the path to the 'rg' command, eg: '/usr/local/bin/rg'. If not specified the @vscode/ripgrep package will be used."
        },
        "periscope.rgGlobExcludes": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "description": "Additional glob paths to exclude from the 'rg' search, eg: '**/dist/**'."
        },
        "periscope.addSrcPaths": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "description": "Additional source paths to include in the rg search. You may want to add this as a workspace specific setting."
        },
        "periscope.rgMenuActions": {
          "type": "array",
          "default": [],
          "items": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string",
                "description": "The label of the menu item to display in the menu."
              },
              "value": {
                "type": "string",
                "description": "The value of ripgrep options you would like to include."
              }
            },
            "required": [
              "value"
            ]
          },
          "description": "Create menu items which can be selected prior to any query, these items will be added to the ripgrep command to generate the results. Eg: Add  `{ label: \"JS/TS\", value: \"--type-add 'jsts:*.{js|ts|tsx|jsx}' -t jsts\" },` as a menu option to only show js & ts files in the results."
        },
        "periscope.rgQueryParams": {
          "type": "array",
          "default": [
            {
              "param": "-t $1",
              "regex": "^(.+) -t ?(\\w+)$"
            }
          ],
          "items": {
            "type": "object",
            "properties": {
              "param": {
                "type": "string",
                "description": "The rg params to translate to (e.g -t $1, -g '$1')."
              },
              "regex": {
                "type": "string",
                "description": "The regex to match the query and capture the value to pass to the rg param (e.g `^(.+) -t ?(\\w+)$`)"
              }
            },
            "required": [
              "param",
              "regex"
            ]
          },
          "description": "Match ripgrep parameters from the input query directly. E.g: `{ param: \"-t $1\", regex: \"^(.+) -t ?(\\w+)$\" },` will translate the query `hello -t rust` to `rg 'hello' -t rust`"
        },
        "periscope.startFolderDisplayIndex": {
          "type": "number",
          "default": 0,
          "description": "The folder index to display in the results before truncating with '...'."
        },
        "periscope.startFolderDisplayDepth": {
          "type": "number",
          "default": 1,
          "description": "The folder depth to display in the results before truncating with '...'."
        },
        "periscope.endFolderDisplayDepth": {
          "type": "number",
          "default": 4,
          "description": "The folder depth to display in the results after truncating with '...'."
        },
        "periscope.showWorkspaceFolderInFilePath": {
          "type": "boolean",
          "default": true,
          "description": "Include workspace folder name in the folder depth display."
        },
        "periscope.alwaysShowRgMenuActions": {
          "type": "boolean",
          "default": false,
          "description": "If true, then open rg menu actions every time the search is invoked."
        },
        "periscope.rgQueryParamsShowTitle": {
          "type": "boolean",
          "default": true,
          "description": "If true, when a ripgrep parameter match from the list in `rgQueryParams`, the quick pick will show the matched result as a preview in the title bar."
        },
        "periscope.showPreviousResultsWhenNoMatches": {
          "type": "boolean",
          "default": false,
          "description": "If true, when there are no matches for the current query, the previous results will still be shown."
        },
        "periscope.gotoRgMenuActionsPrefix": {
          "type": "string",
          "default": "<<",
          "description": "If the query starts with this prefix, then open rg menu actions."
        },
        "periscope.enableGotoNativeSearch": {
          "type": "boolean",
          "default": true,
          "description": "If true, then swap to native vscode search if the custom suffix is entered using the current query."
        },
        "periscope.gotoNativeSearchSuffix": {
          "type": "string",
          "default": ">>",
          "description": "If the query ends with this suffix, then swap to the native search with the query applied."
        },
        "periscope.peekBorderColor": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "Color of the peek border. If not set, uses the editor's find match highlight border color. ('white', '#FFF', 'rgb(255,255,255)', 'rgba(255,255,255,0.5)')"
        },
        "periscope.peekBorderWidth": {
          "type": "string",
          "default": "2px",
          "description": "Width of the peek border"
        },
        "periscope.peekBorderStyle": {
          "type": "string",
          "enum": [
            "solid",
            "dashed",
            "inset",
            "double",
            "groove",
            "outset",
            "ridge"
          ],
          "default": "solid",
          "description": "Style of the peek border"
        },
        "periscope.peekMatchColor": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "Color used to highlight matching text in preview. If not set, uses the editor's find match highlight color. ('white', '#FFF', 'rgb(255,255,255)', 'rgba(255,255,255,0.5)')"
        },
        "periscope.peekMatchBorderColor": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "Border color for highlighted matching text. If not set, uses a slightly darker version of the highlight color."
        },
        "periscope.peekMatchBorderWidth": {
          "type": "string",
          "default": "1px",
          "description": "Border width for highlighted matching text"
        },
        "periscope.peekMatchBorderStyle": {
          "type": "string",
          "enum": [
            "solid",
            "dashed",
            "inset",
            "double",
            "groove",
            "outset",
            "ridge"
          ],
          "default": "solid",
          "description": "Border style for highlighted matching text"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile",
    "lint": "eslint src --ext ts && prettier --check .",
    "lint:fix": "eslint src --ext ts --fix && prettier --write .",
    "test": "npm run lint && node ./out/test/runTest.js",
    "prepare": "husky"
  },
  "dependencies": {
    "@vscode/ripgrep": "^1.15.9"
  },
  "devDependencies": {
    "@semantic-release/changelog": "^6.0.3",
    "@semantic-release/git": "^10.0.1",
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/mock-fs": "^4.13.4",
    "@types/node": "16.x",
    "@types/sinon": "^17.0.4",
    "@types/vscode": "^1.88.0",
    "@typescript-eslint/eslint-plugin": "^5.53.0",
    "@typescript-eslint/parser": "^5.53.0",
    "@vscode/test-electron": "^2.2.3",
    "eslint": "^8.34.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-import": "^2.29.1",
    "glob": "^8.1.0",
    "husky": "^9.0.11",
    "lint-staged": "^15.2.2",
    "mocha": "^10.2.0",
    "mock-fs": "^5.4.1",
    "prettier": "3.2.5",
    "semantic-release": "^23.0.8",
    "sinon": "^19.0.5",
    "typescript": "^5.5.4"
  },
  "lint-staged": {
    "**/*": "prettier --write --ignore-unknown",
    "src/**/*": "eslint --fix"
  },
  "license": "SEE LICENSE IN LICENSE.txt"
}
